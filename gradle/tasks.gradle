task makeJar(type: Jar) {
    manifest {
        attributes  'Implementation-Title': 'Bitcoin Verde',
                    'Implementation-Version': archiveVersion,
                    'Main-Class': 'com.softwareverde.bitcoin.server.main.Main',
                    'Class-Path': (project.configurations.compileClasspath + project.configurations.runtimeClasspath).collect { 'libs/' + it.getName() }.join(' ')
    }

    archiveBaseName = project.name

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from sourceSets.main.output
    with jar
}

task copyDependencies(type: Copy) {
    from (configurations.compileClasspath + configurations.runtimeClasspath)
    into "$buildDir/libs/libs"

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

allprojects {
    test {
        minHeapSize = "1024m"
        maxHeapSize = "8192m"

        testLogging {
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    configurations {
        umljavadoc
    }

    dependencies {
        umljavadoc 'org.umlgraph:umlgraph:5.6.6'
    }

    // Requires "dot".  `brew install graphviz`
    task makeDocumentation(dependsOn: javadoc) {
        setDescription('Generates Javadoc API documentation with UMLGraph diagrams')
        setGroup(JavaBasePlugin.DOCUMENTATION_GROUP)

        doLast {
            def javaFilePath = file('src/main/java')
            if (javaFilePath.exists()) {
                ant.javadoc(classpath: (configurations.compileClasspath).asPath, sourcepath: file('src/main/java'), packagenames: '*', destdir: "${docsDir}/javadoc", private: 'true', docletpath: configurations.umljavadoc.asPath) {
                    doclet(name: 'org.umlgraph.doclet.UmlGraphDoc') {
                        param(name: '-inferrel')
                        param(name: '-inferdep')
                        param(name: '-qualify')
                        param(name: '-postfixpackage')
                        param(name: '-hide', value: 'java.*')
                        param(name: '-collpackages', value: 'java.util.*')
                        param(name: '-nodefontsize', value: '9')
                        param(name: '-nodefontpackagesize', value: '7')
                        param(name: '-link', value: 'http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/doclet/spec')
                        param(name: '-link', value: 'http://java.sun.com/j2se/1.5/docs/api')
                    }
                }
            }
        }
    }
}
