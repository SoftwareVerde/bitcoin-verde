package com.softwareverde.bitcoin.slp.validator;

import com.softwareverde.bitcoin.server.module.node.sync.BlockchainIndexer;
import com.softwareverde.bitcoin.test.UnitTest;
import com.softwareverde.bitcoin.test.fake.FakeAtomicTransactionOutputIndexerContext;
import com.softwareverde.bitcoin.test.fake.FakeTransactionOutputIndexerContext;
import com.softwareverde.bitcoin.transaction.Transaction;
import com.softwareverde.bitcoin.transaction.TransactionInflater;
import com.softwareverde.concurrent.service.SleepyService;
import com.softwareverde.constable.bytearray.ByteArray;
import com.softwareverde.constable.list.List;
import com.softwareverde.constable.list.mutable.MutableList;
import com.softwareverde.cryptography.hash.sha256.Sha256Hash;
import com.softwareverde.logging.Logger;
import com.softwareverde.util.Tuple;
import com.softwareverde.util.Util;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

public class SlpTransactionValidatorTests extends UnitTest {

    @Override @Before
    public void before() throws Exception {
        super.before();
    }

    @Override @After
    public void after() throws Exception {
        super.after();
    }

    protected static Tuple<BlockchainIndexer, SlpTransactionValidator> _createSlpValidationComponents(final HashMap<Sha256Hash, Transaction> transactions, MutableList<Sha256Hash> validHashes) throws InterruptedException {
        final FakeTransactionOutputIndexerContext transactionOutputIndexerContext = new FakeTransactionOutputIndexerContext();
        final FakeAtomicTransactionOutputIndexerContext atomicTransactionOutputIndexerContext = transactionOutputIndexerContext.getContext();
        for (final Transaction transaction : transactions.values()) {
            atomicTransactionOutputIndexerContext.addTransaction(transaction);
        }

        final BlockchainIndexer blockchainIndexer = new BlockchainIndexer(transactionOutputIndexerContext, 0);

        // Action
        blockchainIndexer.start();

        final int maxSleepCount = 10;
        int sleepCount = 0;
        while (blockchainIndexer.getStatusMonitor().getStatus() != SleepyService.Status.SLEEPING) {
            Thread.sleep(250L);
            sleepCount += 1;

            if (sleepCount >= maxSleepCount) { throw new RuntimeException("Test execution timeout exceeded."); }
        }

        final AtomicInteger validationCount = new AtomicInteger(0);
        final SlpTransactionValidator slpTransactionValidator = new SlpTransactionValidator(
                new TransactionAccumulator() {
                    @Override
                    public Map<Sha256Hash, Transaction> getTransactions(final List<Sha256Hash> transactionHashes, final Boolean allowUnconfirmedTransactions) {
                        final HashMap<Sha256Hash, Transaction> returnedTransactions = new HashMap<Sha256Hash, Transaction>(transactionHashes.getCount());
                        for (final Sha256Hash transactionHash : transactionHashes) {
                            returnedTransactions.put(transactionHash, atomicTransactionOutputIndexerContext.getTransaction(transactionHash));
                        }
                        return returnedTransactions;
                    }
                },
                new SlpTransactionValidationCache() {
                    @Override
                    public Boolean isValid(final Sha256Hash transactionHash) {
                        if (validHashes.contains(transactionHash)) { return true; }
                        return null;
                    }

                    @Override
                    public void setIsValid(final Sha256Hash transactionHash, final Boolean isValid) {
                        if (isValid) {
                            validHashes.add(transactionHash);
                        }
                    }
                }
        );
        return new Tuple<>(blockchainIndexer, slpTransactionValidator);
    }

    protected static void _validateSlpTransactions(final SlpTransactionValidator slpTransactionValidator, final HashMap<Sha256Hash, Boolean> slpValidityMap, final HashMap<Sha256Hash, Transaction> transactions) {
        for (final Sha256Hash transactionHash : slpValidityMap.keySet()) {
            final Transaction transaction = transactions.get(transactionHash);

            final Boolean isValid = slpTransactionValidator.validateTransaction(transaction);
            Logger.info(transactionHash + " " + (isValid != null ? "SLP" : "   ") + " " + (Util.coalesce(isValid, true) ? "VALID" : "INVALID"));
            Assert.assertEquals(slpValidityMap.get(transactionHash), isValid);
        }
    }

    @Test
    public void should_validate_slp_transactions() throws Exception {
        // Setup
        final FakeTransactionOutputIndexerContext transactionOutputIndexerContext = new FakeTransactionOutputIndexerContext();
        final FakeAtomicTransactionOutputIndexerContext atomicTransactionOutputIndexerContext = transactionOutputIndexerContext.getContext();

        BitcoinVerdeTestToken.loadBitcoinVerdeTestTokens(atomicTransactionOutputIndexerContext);
        final BlockchainIndexer blockchainIndexer = new BlockchainIndexer(transactionOutputIndexerContext, 0);

        final HashMap<Sha256Hash, Boolean> slpValidityMap = new HashMap<Sha256Hash, Boolean>();
        slpValidityMap.put(Sha256Hash.fromHexString("34DD2FE8F0C5BBA8FC4F280C3815C1E46C2F52404F00DA3067D7CE12962F2ED0"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("97BB8FFE6DC71AC5B263F322056069CF398CDA2677E21951364F00D2D572E887"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("16EA62D94AC142BAF93A6C44C5DC961883DC4D38B85F737ED5B7BB326707C647"), false); // Invalid format.
        slpValidityMap.put(Sha256Hash.fromHexString("9BD457D106B1EECBD43CD6ECA0A993420ABE16075B05012C8A76BB96D1AE16CE"), false);
        slpValidityMap.put(Sha256Hash.fromHexString("8572AA67141E5FB6C48557508D036542AAD99C828F22B429612BDCABBAD95373"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("68092D36527D174CEA76797B3BB2677F61945FDECA01710976BF840664F7B71A"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("0F58E80BF3E747E32BCF3218D77DC01495622D723589D1F1D1FD98AEFA798D3D"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("4C27492AA05C9D4248ADF3DA47A9915FB0694D00D01462FF48B461E36486DE99"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("87B17979CC05E9E5F5FA9E8C6D78482478A4E6F6D78360E818E16311F7F157F0"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("731B7493DCAF21A368F384D75AD820F73F72DE9479622B35EF935E5D5C9D6F0E"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("AE0D9AE505E4B75619A376FA70F7C295245F8FD28F3B625FBEA19E26AB29A928"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("08937051BA961330600D382A749262753B8A941E9E155BA9798D2922C2CE3842"), false); // Attempts to spend outputs as SLP outputs that are not SLP outputs...
        slpValidityMap.put(Sha256Hash.fromHexString("9DF13E226887F408207F94E99108706B55149AF8C8EB9D2F36427BA3007DCD64"), false); // Attempts to spend not SLP outputs belonging to invalid SLP transactions...
        slpValidityMap.put(Sha256Hash.fromHexString("25039E1E154AD0D0ED632AF5A6524898540EE8B310B878045343E8D93D7B88C1"), false); // Attempts to spend not SLP outputs belonging to invalid SLP transactions...
        slpValidityMap.put(Sha256Hash.fromHexString("19DE9FFBBBCFB68BED5810ADE0F9B0929DBEEB4A7AA1236021324267209BF478"), false); // Attempts to spend not SLP outputs belonging to invalid SLP transactions...

        // Action
        blockchainIndexer.start();

        final int maxSleepCount = 10;
        int sleepCount = 0;
        final SleepyService.StatusMonitor statusMonitor = blockchainIndexer.getStatusMonitor();
        while (statusMonitor.getStatus() != SleepyService.Status.SLEEPING) {
            Thread.sleep(250L);
            sleepCount += 1;

            if (sleepCount >= maxSleepCount) { throw new RuntimeException("Test execution timeout exceeded."); }
        }

        final SlpTransactionValidator slpTransactionValidator = new SlpTransactionValidator(new TransactionAccumulator() {
            @Override
            public Map<Sha256Hash, Transaction> getTransactions(final List<Sha256Hash> transactionHashes, final Boolean allowUnconfirmedTransactions) {
                final HashMap<Sha256Hash, Transaction> transactions = new HashMap<Sha256Hash, Transaction>(transactionHashes.getCount());
                for (final Sha256Hash transactionHash : transactionHashes) {
                    final Transaction transaction = atomicTransactionOutputIndexerContext.getTransaction(transactionHash);
                    transactions.put(transactionHash, transaction);
                }
                return transactions;
            }
        });

        // Assert
        for (final Sha256Hash transactionHash : slpValidityMap.keySet()) {
            final Transaction transaction = atomicTransactionOutputIndexerContext.getTransaction(transactionHash);
            final Boolean isValid = slpTransactionValidator.validateTransaction(transaction);
            Logger.info(transactionHash + " " + (isValid != null ? "SLP" : "   ") + " " + (Util.coalesce(isValid, true) ? "VALID" : "INVALID"));
            Assert.assertEquals(slpValidityMap.get(transactionHash), isValid);
        }

        blockchainIndexer.stop();
    }

    @Test
    public void should_validate_non_trivial_recursive_slp_transaction_depth() throws Exception {
        // Setup
        final HashMap<Sha256Hash, Boolean> slpValidityMap = new HashMap<Sha256Hash, Boolean>();
        slpValidityMap.put(Sha256Hash.fromHexString("039FC4304C7F7324E98B6FFCFB7280BE963D7D8A18173494D5E7DE11CCA34D81"), true);

        final TransactionInflater transactionInflater = new TransactionInflater();

        // Contains all "ToriBonBon" SLP Txns from Block 00000000000000000013E713CF92C8554BB28D03514918888F97664BFA071D11...
        final HashMap<Sha256Hash, Transaction> transactions = new HashMap<Sha256Hash, Transaction>();
        { // 039FC4304C7F7324E98B6FFCFB7280BE963D7D8A18173494D5E7DE11CCA34D81
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("02000000032633CC8991977E070F5103A0AE829CE847CDD2EFDC5EC71F2BD8A36158DADD81020000006B483045022100D0B66E8A139F91E1E5C32F336E18A5CC99A10FE6805D520FEFFB387A80E64D4E02202AB542EFADA6E70923BDE611157A18F4FF74A7E4A7EEB5B621C2787F15DA11814121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF2633CC8991977E070F5103A0AE829CE847CDD2EFDC5EC71F2BD8A36158DADD81010000006A47304402203E6AB8BC914EB9508E9345B3A34F04657B38844C887BCC2BD5E7CA6CFC3518AA022037EA8D25FBCA5B2BB611E625034C716DA4AB46AA617BD55D8D91E21A8971A1BA4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF2633CC8991977E070F5103A0AE829CE847CDD2EFDC5EC71F2BD8A36158DADD81030000006B483045022100B2F2AD45186BFA8D5AE179B9D3838A629B5BCA083D3299267F17EAF6FAD76FFE02203461F22027E70BD3FF167B6D732D9CD4495D4D1EBBF75808455C69D972AA41B14121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000000A08000000000000000A22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC9CC10700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 81DDDA5861A3D82B1FC75EDCEFD2CD47E89C82AEA003510F077E979189CC3326
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        { // 54B831462FCDE5547EE2725E432C07766EB593C67F07E5D9E467358943038DBA
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003F921236AA4A1A52014892786D6AB4CE9AA71874FC34DB2F41CB52A8C770A2E96020000006B483045022100DC80C8254A0FB4262D10F2D7F6CE7D6D7BB95A2185007B7AABB072B401B7170A02206871A3E5ADB5C6540D55FB408E45F8BC26B80147D540E1BEEFC258FDE1FA109F4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFF921236AA4A1A52014892786D6AB4CE9AA71874FC34DB2F41CB52A8C770A2E96010000006B483045022100DCDFFEF5B828C6C724D0B374E956B79B65818991FF3A1DEA57FB4337640AE09402202E146698504AB3ECB0BA616EEB7EBBDBFFEC06E6C3A3D801904181898FDFCF7E4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFF921236AA4A1A52014892786D6AB4CE9AA71874FC34DB2F41CB52A8C770A2E96030000006A473044022047F26DB1A14F319832A3C42AFDA62BE2007E86AB924537AD97B6E9F0C61866F702207205CB0F8682ABC197E55054E1EA9E603458719116F905D131B5B8E1B9D2B64A4121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000000C08000000000000000822020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988ACD6C60700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 962E0A778C2AB51CF4B24DC34F8771AAE94CABD68627891420A5A1A46A2321F9
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        { // E339D6B2045756D2A74DAF67D2D7C7A8D322D54663FE0553F26EA1306AD4049F
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        { // DC734BD714F97EBFE866F910C06D56B1B65A696FF14072203932F9A222909C5B
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("020000000331B2174A4C4244E5DDBC8C7FA60AE756595BD4E6DDF175E9764C2DBFE3315066020000006A473044022030B48A56868ED539337B857EEAC217594696E34360E13C76347AE8006B1B0968022076CDFCC6945E2769F01B73B1DD820DE977F4617A7D4E24EA091CD260892AAA644121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF31B2174A4C4244E5DDBC8C7FA60AE756595BD4E6DDF175E9764C2DBFE3315066010000006B4830450221009AC6A0EC069794EA99EDC29DD6CA7C6F1C604795C5B3AD55F7C954B99643DDA002200250AD628EC640CB66E7C7CB76C26DBA92AAADC515C1999ED2E296329620D1134121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF31B2174A4C4244E5DDBC8C7FA60AE756595BD4E6DDF175E9764C2DBFE3315066030000006A473044022029DB5647CB670A755860A7AC519101588105292EBE59DBD1626A9BEC9F9E0D880220649BD641AEBDF1E3EB21DF8DE9B1D6B533FB5A8CAB449C91F266B4B5263EFB1D4121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000000F08000000000000000522020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988ACADCE0700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 665031E3BF2D4C76E975F1DDE6D45B5956E70AA67F8CBCDDE544424C4A17B231
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003621243829FD608C359F8E1A745F62A81CEA07AC7AE2477C4FB44033CC1115F4A020000006A4730440220358818BA038C13B576A6FFD5A4C661F30067BAF35AED6825BDD2791D05C3441A02206152F438BA871C03D0C11BC7FE2C2DFB020E8D925716EF51BE080BB86FE464F84121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF621243829FD608C359F8E1A745F62A81CEA07AC7AE2477C4FB44033CC1115F4A010000006B483045022100B946841E329CAE1BCD57682613CAFD77D80D808A8A36D607409896F9B5C2DA54022066DF5E66037A3231D48E45BB82AED1BFF42D2F12B90B94BFA1B1B4D898D68A894121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF621243829FD608C359F8E1A745F62A81CEA07AC7AE2477C4FB44033CC1115F4A030000006A47304402202C08173D4E00BEC3498D3A3392567DA005D67B9A97D22233F05D6A78CDDA844D022074E181478D94DFF9F92868B6C07DF2AF1F6C0237621B4CBA633CD3FE215F7FDE4121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001008000000000000000422020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC4AD10700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 4A5F11C13C0344FBC47724AEC77AA0CE812AF645A7E1F859C308D69F82431262
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003CC2A77EC1F1E6E706C318DA7B266E7EDE121C756FFA15808C113776B23AECCDD020000006B483045022100B87E06AABE1287BF1E18ABCC61B5860D0396174A6C73C5EA7DACD935B6503F6002200B6D12285E66134FB2B4031F9E834699A478E8A1EBEC3E7CA20FFBC7669E1F184121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFCC2A77EC1F1E6E706C318DA7B266E7EDE121C756FFA15808C113776B23AECCDD010000006A4730440220680EE8FD78DEAF858BC38BA4CAA5ADC857BBCA1A60B2C5F3DF5DF9396A38467C02200996BE2C43789052A0F985E350A25F7327BB5F8D013102B65680829CB25C957A4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFCC2A77EC1F1E6E706C318DA7B266E7EDE121C756FFA15808C113776B23AECCDD030000006B4830450221008D7A650A52FBFC1A7C0B989C0C8491EAB0FF72DCFBC4CAE2963ADC0804CFCDF002204F5EFF6B63E6B5ACC932BAD7C754D888D012224680A74B506B8FF4E047AF750C4121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001108000000000000000322020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988ACE7D30700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // DDCCAE236B7713C10858A1FF56C721E1EDE766B2A78D316C706E1E1FEC772ACC
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003AED9B130B71D8842A54ECABFCFD6474126D43DBF5DEE2D3E336A1299A30BA114020000006A47304402202F6B02E762EBE4F273E718A58BD07AF68DE0C22D33937A79AEEA94D29DDA753D0220677E59194BBDA242D83B4AABD81BE018D43618F4452264D68A00C632850BD40A4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFAED9B130B71D8842A54ECABFCFD6474126D43DBF5DEE2D3E336A1299A30BA114010000006A47304402201D12969E64AF86754B33A24EB988128E57CACD2E8EEC86DC124F4FEE01D71D1B022058336A08B3E77691AC0AF8F42AA9E6F42E8F61727940B6A2C610135EC62275314121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFAED9B130B71D8842A54ECABFCFD6474126D43DBF5DEE2D3E336A1299A30BA114030000006A473044022072F776BAF56354AB390388253E5680A778F748EC4744B2F9F4EED370619D2EE302207AFEABBC6D7BA36FC7724D29B43F94166333769B34CAFF53ADA62501572998404121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001208000000000000000222020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC84D60700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 14A10BA399126A333E2DEE5DBF3DD4264147D6CFBFCA4EA542881DB730B1D9AE
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        { // 90B1B25219F5B2B679455361AC30EE001C15C1CC7BDBE893445C104D6884A458
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("02000000025CCBA328DEBBA2C7B07EFC2F9C2E691674B36CB23622484B3C22A5C3E0D5D329020000006B483045022100F6BF028A08D8CF5B3E65B7DC7CAF1FF9976FC0810A2EB5B933BD1DA93AE866A202206D24521EBE1AAA40AFCB22CFC0487354501A741AC49E37D5B4791C3B672C1F684121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF5CCBA328DEBBA2C7B07EFC2F9C2E691674B36CB23622484B3C22A5C3E0D5D329030000006A473044022027FC36BD86D0929F01047877B2EEADCB2130E23270D0654244C630DBC6A3A77A0220518D56D560AC9FEFBE7A9C47C1195C246631BE967990E860D74E72CCB391BB774121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF030000000000000000376A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001422020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC4CDD0700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 29D3D5E0C3A5223C4B482236B26CB37416692E9C2FFC7EB0C7A2BBDE28A3CB5C
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003E0C9257CDB0F0112BD28C19E673EE340858D2C2A37B14F482D04FF823EB1D7D9020000006B48304502210088D6EA6473AE9254F172844A64FAF3FD2F5F8168CE4FE837DE820D7CBA420EEE0220065755A2621D6E919B5031A855447DD6E5860DFCC20106F31E80A8B5C562E1E84121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFE0C9257CDB0F0112BD28C19E673EE340858D2C2A37B14F482D04FF823EB1D7D9010000006B483045022100D3804286F3673D720D6F93673738D31FF2568BABCA9724791BF6470B678C0F0D02206F8D4D87DA9AF78EF43025B6158389D92A40A91A2AC109F0A5E3AF96BFDD61694121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFE0C9257CDB0F0112BD28C19E673EE340858D2C2A37B14F482D04FF823EB1D7D9030000006B483045022100D344B843024418D1370D9EFBCAF2AE5A3109DD4B8188AECA1E4386E64E302B510220414221BFB98372652AD3E340402A5EEF352D8D29111E629FBE3F68B28C8859044121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001508000000000000001422020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC55DF0700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // D9D7B13E82FF042D484FB1372A2C8D8540E33E679EC128BD12010FDB7C25C9E0
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003DB896B88F8302995FEA6587D6C920C60B3D56DA8FB34B554ACE9708BA9F00766020000006B483045022100A16F328BA64C4D8B06031C10F4C3B44C5CF7E727C1F397671546D68601B437A50220755B9FB97575781E9875E6729AD06ACDE910BB6AA52AA0F590B71823F97DAD964121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFDB896B88F8302995FEA6587D6C920C60B3D56DA8FB34B554ACE9708BA9F00766010000006A473044022071FF524D7EC75C381EA70B6F62DEF1B47B1D8B39E479FAEB091116CAEBB4C360022019CC38A9211B155CA190D2C639F2F4D6256097F8896C4C3CFC31F5BB880B929F4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFDB896B88F8302995FEA6587D6C920C60B3D56DA8FB34B554ACE9708BA9F00766030000006B483045022100FD4798B93FA26D967ECC21A3C90D3D70E0FDC09961E1AD838D35F098993D605502203DAF9221E474DF4E48880520643310C51E5F8D3495B00FB335D9DA66D52D5FA24121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001608000000000000001322020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988ACF2E10700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 6607F0A98B70E9AC54B534FBA86DD5B3600C926C7D58A6FE952930F8886B89DB
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("020000000305D03C2B847181353E57299692285FB38EAB4A84A81612F73FCADBD31F9922E9020000006A473044022014328470E7DAE2BA33A4B74DB7D65822493F4E3B599F0B33A7EE0C36F93ABC0F0220080E00A1E83D87EC5E843B54DC1C12692A9F726A05C8FF0988158F966452D48F4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF05D03C2B847181353E57299692285FB38EAB4A84A81612F73FCADBD31F9922E9010000006B483045022100D6A4841E8A0F0DFC626207A0BC624D5AB1154E5335AF7FC612A52DDEAA0090BC02203712F226A9F0F1091619E00679B13F9B14E9EDF4B6C629FB8783CF8330F05FD24121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF05D03C2B847181353E57299692285FB38EAB4A84A81612F73FCADBD31F9922E9030000006A473044022022EBB9A1AED58345066D13C9DC4F4842ACB687C79BCD6FA4A41239FDBF54DC87022073EA31E0D96ACF609B1AD5C8F79668C5C76593371FE637E6B983A2D08BCB49D04121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001808000000000000001122020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC8FE40700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // E922991FD3DBCA3FF71216A8844AAB8EB35F28929629573E358171842B3CD005
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003CAF53B8D9F3871A0065F69FEED9B885E2BDA74F46875B8696373DC6D59B98428020000006A473044022075FE082AD87B515F7828F4A7DF2F247CE9B2000FD4D67B22F01B2584726E435F0220469B5E8CDCF6181685799D8F1005F148FB04582C46D35BBE08285F83C419C9494121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFCAF53B8D9F3871A0065F69FEED9B885E2BDA74F46875B8696373DC6D59B98428010000006B483045022100A90EC3BE9C35E756E0BB809D4842BC0FE4DD3AFBFDBAB266A7D0A41105E50CEF02207C4D4D4578FC3D337494891737263DE6C753F85EF121384039FE74797ED426FF4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF93E2F1749E100D89285B1DFC3AE879C6C2EAD16D5177CC64136B4B2DFE2898B1020000006A47304402205C7BC5978EC23C6A385A116E8412C5875A65E6B412CCED9C452B250436E86EDA022025D431D0C00A5F67015ECD4C3D57D978F156BF0CBDC0555722A5724080C9841A4121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001708000000000000001222020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC2CE70700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // B19828FE2D4B6B1364CC77516DD1EAC2C679E83AFC1D5B28890D109E74F1E293
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000002AF537D82EE547B9C7C4F3080DD9B4775042EC43387B02A5425AD7D81054862C6010000006B483045022100FDBA30FC202FB19FC9247CC179CBFF22F9296BBC8CC54077BA041D8AF06DE1790220363AA52632C8925F7DE919517AE37071CD513F152E57D18E93EEE8DC99F6DB534121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFAF537D82EE547B9C7C4F3080DD9B4775042EC43387B02A5425AD7D81054862C6020000006A47304402207C3555DEEADD729EDFC02CCA8216208CB37EB23C695F3C31C219EB9CBFD02DA30220373712580EB81115FBB5289DD1F90D1674466A2FFF4D8BEFEDFA39AE6EE0D3A34121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF030000000000000000376A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000000122020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988ACC9E90700000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 2884B9596DDC736369B87568F474DA2B5E889BEDFE695F06A071389F8D3BF5CA
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003EB5DFC30000FE3BD284B76D60D463C8BE8AE9C8A8D272FB29166933898235F25020000006A473044022045EA0D3C726336A7FB3CD0B5B90318B64B7A8895E8E799365986EF5DC4A867BB0220796FB68FE30E94533D69EF841D191A2FCA4683E6430C3E16D34AF19424B3713C4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFEB5DFC30000FE3BD284B76D60D463C8BE8AE9C8A8D272FB29166933898235F25010000006A47304402200534D50B31D3444235B2E4C9314E7C46355DB332C6C8CD01A03C3EE79EA8563302204BA72B10B63EDACBB64B6F20AC76352F89FC70F129663FE04467519CBAEC31414121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFEB5DFC30000FE3BD284B76D60D463C8BE8AE9C8A8D272FB29166933898235F25030000006A473044022076B467BC50D760AB2D4A484602FE69A9F605D9293FA5EC0F1588875A8BB90B7B02206DFC8D6AE03B9A5554D42083C8DBBE7ABB6436C77DB96E42A0D8DADD021959B64121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF030000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001808000000000000001122020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 255F239838936691B22F278D8A9CAEE88B3C460DD6764B28BDE30F0030FC5DEB
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("020000000693E2F1749E100D89285B1DFC3AE879C6C2EAD16D5177CC64136B4B2DFE2898B1010000006A47304402200F172E10FEBCFF5F11B5532F9F5C8AE6325ADFE9AC1B7D9EC432B1524A4E91CC022009911DC93F218D0AFBA45858FC31A32170B269847003837732490CB4B6EA0F884121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF24BA16F47D5AD2EB5D6D79801191255CAAB86F63237ECAED4D50BED01C946903010000006A47304402206CC06E703C5AC27729BD5EB1533BF26F30FD750B30BF2B5FA08ABFF13F6C368F022012F9D6B5261D570B0229EA784F202851FA933761F9C708F771073112F1E117E64121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF46A0DA8233B802FC75D3D663146685F7434F19F7230A327FDAA78189DC6BDF0D010000006A47304402207FFB8434745B4D2683D0D35E93409F74F07CA5B75A5F414C1B920544D8F92C6002204B6991989C91AD3DA0E166238387122F36F184CA37648F3E9E9A9ECDCE3DB5C24121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFF14ABE9A4189052A765D06026B9D804916CA0EBE9CAD7687CF76229FF787FFB8010000006B483045022100B51316C5A0292CED4C9F1CA9211308169E8C5A8ED5044D4989CE08FFD80ED83A02202088937BDE3660A306B13C6CBFC8FB3DD78B2724E843546899AE2B6162FBF29D4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF01DCA581D008697FE51A2DF1A47A2C12E8FB47E9FCB181110D888636362DF428010000006A4730440220324DA57D50A33515E36CB6380A5F410999E2C9E0EA86BC22CF2EA4121D88AA0702202FB08F8CA85A19C9AB52C219CCD0E5EDA6BD6F77B1ED483C528FCDEA5D2259574121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF1246FBA2C78760A1963E4C4D6DDFA2F8F6781FDEB14848ACF21A28D70F4DED97010000006B483045022100BA3EB80C10509DB09944C3DC0F86690A19F223B0C2DEC2C8C968DE02929170AE022067FCF086BA3071D3C290E3B29AFF2CFC698D721056249D240A8897A4D4154FAE4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001908000000000000001022020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC2F040000000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // C6624805817DAD25542AB08733C42E0475479BDD80304F7C9C7B54EE827D53AF
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        { // 0369941CD0BE504DEDCA7E23636FB8AA5C25911180796D5DEBD25A7DF416BA24
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        { // 0DDF6BDC8981A7DA7F320A23F7194F43F785661463D6D375FC02B83382DAA046
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003C13DF06AB9E8AC854056CB657418B9FDB1819978A65C304E29840B4E5F60BAF7020000006B483045022100A2E0C649B63140C6C301024A1F62D91D0BBE1C4C1774F3642BBE19501521717902202C1B91389ACD9E72529A7E1F69385C58CE19ED94437D6FB27B2A3F0980ED5ABA4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFC13DF06AB9E8AC854056CB657418B9FDB1819978A65C304E29840B4E5F60BAF7010000006B483045022100CA40043485F268A042B15FF875CD17F92E765B0AB827BA46B75D59B86DF0B0EA022032647C27BED35576F585EFFBCDB2833E6F88B71636FBD83E97C70BE106C422174121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFFC13DF06AB9E8AC854056CB657418B9FDB1819978A65C304E29840B4E5F60BAF7030000006B483045022100D6720F79774A2812E6F96956A48AA8DDDB054D2AA4ACE4FA99D597A121D7896002204A516E8F4E29192F571AC37B25405BB9884D19870668D0F62EA4B38C95339DF44121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000000408000000000000000322020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC7B0C0800000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // B8FF87F79F2276CF8776AD9CBE0ECA1649809D6B02065D762A0589419ABE4AF1
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000002E2D572A5A1503D35A1D769845B211A9CA2B7EA54C3393A0DB8FDBBBB6EF393CC020000006B483045022100C752B7F041A8C73DDED5AA89C074339EF4874729B1E3D24334B0C35FE32D09C50220654C3203BB88E559415E0A7A7FA631FE625E832F1A9208268A166A95FC251AF64121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF01DCA581D008697FE51A2DF1A47A2C12E8FB47E9FCB181110D888636362DF428030000006A47304402204CD409549AB120DC27F1C5177DA2E4547631DA6618FD0CECF89374A89FC48C3C022064CAC1D8B6C0F2C68952B3E13693EF56CC35744DEC8E8B09789A8D0169D1C5A64121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000000608000000000000000422020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988ACB5110800000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        { // 28F42D363686880D1181B1FCE947FBE8122C7AA4F12D1AE57F6908D081A5DC01
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        { // 97ED4D0FD7281AF2AC4848B1DE1F78F6F8A2DF6D4D4C3E96A16087C7A2FB4612
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003804114A4415759A914F57CDB9690BAB1CAFE653ABF9363797EB7300DB5B1F174020000006A47304402204533B0F8C00327F210E1A28820B3E76B6465F7A9400685EDBB4548358E67382C022031902C9B4C960B62ED80A93A527C4059EBD9FF66D1F63F03139ECD4A01B078D54121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF804114A4415759A914F57CDB9690BAB1CAFE653ABF9363797EB7300DB5B1F174010000006B483045022100B996B35EFA9C4CF80769094588449049BBF6D35F9B1A7F610C148C0B86C521BE022014F026F139CC2A1DD018C486C9DF6EC44417332AA97AE2DDEDACDFED2FEFF9ED4121030E3259E023728F57251EAA5F258C6452BCB1AF3D89BB6E911857E74DF351E7BDFFFFFFFF0E9239EC5C70C2DEC6E90E1012417039FF2A16D636660FE9917D29A930464E64030000006A4730440220203BBEF0E3A358AB474BDE23F9E1D4BF6229B282ABC8145A8410BBAB462694EB02206C8B211DA3F03F6F6AA184D4371966B385C01A7171FAA4A26C59FF93BA77509E4121039BB102119D47ACAADB4699C233CBFD60ECC9CDFD8F338ADCFD43323D5559651BFFFFFFFF040000000000000000406A04534C500001010453454E4420EEBFBB81CD65AE7B93A5FBB006707A97D36733ED24979D367E972B0636B34D1D08000000000000001508000000000000001422020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC22020000000000001976A9144D4280B2915943DAF34C8B11E03F6304E57EEC4988AC91530800000000001976A9140FAC32A3EBDBD2FDA14FF4442E6B60BE35A5C39F88AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        final MutableList<Sha256Hash> validHashes = new MutableList<Sha256Hash>();
        validHashes.add(Sha256Hash.fromHexString("C6624805817DAD25542AB08733C42E0475479BDD80304F7C9C7B54EE827D53AF"));
        validHashes.add(Sha256Hash.fromHexString("0369941CD0BE504DEDCA7E23636FB8AA5C25911180796D5DEBD25A7DF416BA24"));
        validHashes.add(Sha256Hash.fromHexString("0DDF6BDC8981A7DA7F320A23F7194F43F785661463D6D375FC02B83382DAA046"));
        validHashes.add(Sha256Hash.fromHexString("B8FF87F79F2276CF8776AD9CBE0ECA1649809D6B02065D762A0589419ABE4AF1"));
        validHashes.add(Sha256Hash.fromHexString("97ED4D0FD7281AF2AC4848B1DE1F78F6F8A2DF6D4D4C3E96A16087C7A2FB4612"));
        validHashes.add(Sha256Hash.fromHexString("28F42D363686880D1181B1FCE947FBE8122C7AA4F12D1AE57F6908D081A5DC01"));

        final Tuple<BlockchainIndexer, SlpTransactionValidator> slpValidationComponents = _createSlpValidationComponents(transactions, validHashes);

        // Assert
        _validateSlpTransactions(slpValidationComponents.second, slpValidityMap, transactions);
        slpValidationComponents.first.stop();
    }

    @Test
    public void should_identify_invalid_transaction_018ce136c906d7e76cc4593b6be0cbe0e70528b1d6201a476804abd9217389a3() throws InterruptedException {
        // Setup
        final HashMap<Sha256Hash, Boolean> slpValidityMap = new HashMap<Sha256Hash, Boolean>();
        slpValidityMap.put(Sha256Hash.fromHexString("A6CEDB6460DC91F4FF06AB37E9E96F2D1864B7C5CA5B65C68C2E7C1B436E187C"), false);
        slpValidityMap.put(Sha256Hash.fromHexString("018ce136c906d7e76cc4593b6be0cbe0e70528b1d6201a476804abd9217389a3"), false);

        final TransactionInflater transactionInflater = new TransactionInflater();

        final HashMap<Sha256Hash, Transaction> transactions = new HashMap<Sha256Hash, Transaction>();
        {
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        {
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        final MutableList<Sha256Hash> validHashes = new MutableList<Sha256Hash>();


        final Tuple<BlockchainIndexer, SlpTransactionValidator> slpValidationComponents = _createSlpValidationComponents(transactions, validHashes);

        // Assert
        _validateSlpTransactions(slpValidationComponents.second, slpValidityMap, transactions);
        slpValidationComponents.first.stop();
    }

    @Test
    public void should_identify_unparseable_transaction_3c05eb256477f6c7e02e4b19476a6a2650f3a062ca873aeb940d2e7225016584() throws InterruptedException {
        // Setup
        final HashMap<Sha256Hash, Boolean> slpValidityMap = new HashMap<Sha256Hash, Boolean>();
        slpValidityMap.put(Sha256Hash.fromHexString("5e38779ea1080caed266687a45a067f93b772465c80b1ebdf4effc8947c5150d"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("3c05eb256477f6c7e02e4b19476a6a2650f3a062ca873aeb940d2e7225016584"), false);

        final TransactionInflater transactionInflater = new TransactionInflater();

        final HashMap<Sha256Hash, Transaction> transactions = new HashMap<Sha256Hash, Transaction>();
        {
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000003422DB392DDFE0DFCFD963D44FAA05824428F68B5D176F86DC2E71B5A8C9A8612010000006B4830450221009A139D8D9DDA94DA4DBEB2C76CCBD4A619BACD21419B8D70394F7FA7D7B20DBA022053B70F2E2D4F52B20969CA1B6983385F8ECB3D0A3F905AA6079E2D93B04F63D24121029A6A64156C449AB8BEB6634082DD95109800A8AC38F3B226D9DC51B76B4DE9A8FFFFFFFF320B8DF732A4FEF14C8D72DA2CEDCDD0E66441AE1F497C1A6519B3B0AD985B24010000006A47304402206267A10F12FD7CA05EA855CC1CA9CE37D6AC2887AD2798277D85A5D08E637AE102200599B75BA14E8894E6C158705DED89A98A08EA3DB5F0365D77C2E24AF0271EF24121029A6A64156C449AB8BEB6634082DD95109800A8AC38F3B226D9DC51B76B4DE9A8FFFFFFFF54BDF4A8BAA67F838E2AD50A7BB275C09026C054E6BA337F9255A1DD79AEB244020000006B483045022100AD7C6E1F7872549C9F1B35FA85E055434DE23924EF6C9F1CC46CE330736D43E7022020B76A37883C7B893C5819C01EE774114C15456490A22648D4C2169F3CC287024121022BB599CCD4057338F2F8ECD4A8DAEB6A5B9EA178DE44A6A9568571B8C128F937FFFFFFFF040000000000000000406A04534C500001010453454E442034E8C86AD9382648EEA2FB3701F000D80D45B6F2768C2060FC2C7CC313E3673C08000000000000000108000000000000006322020000000000001976A914FA70457F736F2AD2511332638D1AD32F91A3B03788AC22020000000000001976A9142408E9B4C9D527531019F95CA158B25B59244EA888AC160C0000000000001976A9144E8680B782CCBB6752B0EE812CC8D65495DEB68188AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }
        {
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("02000000010D15C54789FCEFF4BD1E0BC86524773BF967A0457A6866D2AE0C08A19E77385E030000006A47304402200A7BB14485EBF0265E6102BF1B037D9960C71193EC6A88B9FBB2F2B089F5E92B022043F162454FFBB0C63FCFDDAB129EA8F93BA1C143964D0DC0722DA8D60352E2C34121022BB599CCD4057338F2F8ECD4A8DAEB6A5B9EA178DE44A6A9568571B8C128F937FFFFFFFF0200000000000000002E6A04534C500001010453454E4420D1AC77D264ADE056C0B8320C9D07571E9EEA75E7BF2561B8287D928F8EA67630FF0A0000000000001976A9144E8680B782CCBB6752B0EE812CC8D65495DEB68188AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }

        final MutableList<Sha256Hash> validHashes = new MutableList<Sha256Hash>();
        validHashes.add(Sha256Hash.fromHexString("5e38779ea1080caed266687a45a067f93b772465c80b1ebdf4effc8947c5150d"));

        final Tuple<BlockchainIndexer, SlpTransactionValidator> slpValidationComponents = _createSlpValidationComponents(transactions, validHashes);

        // Assert
        _validateSlpTransactions(slpValidationComponents.second, slpValidityMap, transactions);
        slpValidationComponents.first.stop();
    }

    @Test
    public void should_identify_valid_transaction_a7e0265fade7847e55594986d4a1523c3c222b109e280d8d44dcf2df4185404c() throws InterruptedException {
        // Setup
        final HashMap<Sha256Hash, Boolean> slpValidityMap = new HashMap<Sha256Hash, Boolean>();
        slpValidityMap.put(Sha256Hash.fromHexString("9AABC72A41CE71293A3810B1D465A15C15D024EFA97B3E47F25E113D61A32F73"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("a7e0265fade7847e55594986d4a1523c3c222b109e280d8d44dcf2df4185404c"), true);

        final TransactionInflater transactionInflater = new TransactionInflater();

        final HashMap<Sha256Hash, Transaction> transactions = new HashMap<Sha256Hash, Transaction>();
        { // D340519A93F4E83876C5EDD29F30D30A5CC3DADC00ABE9BF2B9DCE77E6B6E12F
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0100000001C21DE6D67417E0910F17E447E546247EE62388506B46C3E9ECCFE650A0571AAC0300000064416D23C045B29580206622773B0680110FA38D673BC7355809C3AE409D387951F912D3E596CEA82A4E00923674B74474CB67A1A524FE787E4EEE29B82EAA7D604641210253A8BB158ED0859ABDA14D682FF6B4EE91746F8CF4F5EFE3405DF046E00DED49FEFFFFFF040000000000000000296A04534C500001010747454E455349530555682D4F684C004C004C000100010208FFFFFFFFFFFFFFFF22020000000000001976A9145808E9148F1FFE6B777BFF57013196D824E19F0388AC22020000000000001976A9145808E9148F1FFE6B777BFF57013196D824E19F0388ACC43B5403000000001976A914194347D2BB00D6EA9055CF3A7243C4BA7F98284788AC907A0900"));
            transactions.put(transaction.getHash(), transaction);
        }
        { // 143A719706EF8055E74F4564A1A8B769E4A5F693B2851675D4D445CC9F4E21FD
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("01000000022FE1B6E677CE9D2BBFE9AB00DCDAC35C0AD3309FD2EDC57638E8F4939A5140D30100000064417B865B5F2D98E7D3A24E4DBA7588C09606E7690300AF1132D52AE3CE26FBE404E204A49CAD307ECBB5897A922D94A1AFBD2BBBE6E2AD8FC19FF21696E547AE1B4121028065933B28F884CAAF9A434058D1032B221E95A7BB11C38CA8DB5DBB929491BCFEFFFFFF433E9C0603843933610653C8028F27661F7FB9273F247FC9B9B04224DCF1BF8E000000006441E97EC13805F2D8EC45B97CD818984DCC48993903F96E9FC79CA9B895A1F759C2D4DA2138D43FCA23C1C0B7829165A1B6CA6A97BDE3A39A234D92E0DC58666C8C412102CC9D0634C82FF76A04FBDFE30E7C3E1334A5AE8989AFFCB391D0F5BA18D22126FEFFFFFF0222020000000000001976A914653615611BF468710B7EA9D50DCEA14A7A000E1288ACD5020000000000001976A914BFE3A0B4178808306676515255411DFC67829DB088AC907A0900"));
            transactions.put(transaction.getHash(), transaction);
        }
        { // 9AABC72A41CE71293A3810B1D465A15C15D024EFA97B3E47F25E113D61A32F73
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }
        { // a7e0265fade7847e55594986d4a1523c3c222b109e280d8d44dcf2df4185404c
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0100000003732FA3613D115EF2473E7BA9EF24D0155CA165D4B110383A2971CE412AC7AB9A0100000064412227CC3F927C19FB3385032376B96AAEAA1B50F9327031463AB3217E7B90572808525E3C7D6225E4D64CBA314B08BEA5BEDF1058330A5DDA6F0030FC087DD80D412102E85EA91DDFC8DBC75F5601E5C514AF4943D2C140D17DF7385B8237E1EE3A3F13FEFFFFFFFD214E9FCC45D4D4751685B293F6A5E469B7A8A164454FE75580EF0697713A14000000006441E9EA04A11E76ECDA7DD99D3E6BD8169E54EAA6BB45E229690DB727C2AF82C0C53AC7F1E7C300E7D406F4660FD5E5A5918256B58D7594E8BE6068E0A74A9F8BAE4121025A302090565962D72D7F4343BB3DFE99B235EE90DBD3651B8739F3F4F03186FEFEFFFFFFFD214E9FCC45D4D4751685B293F6A5E469B7A8A164454FE75580EF0697713A14010000006441998CDF8F434050B63834F9F2B786D5C45FEE3AD6D67B006C600EDAE54C088E22BC2E56BD3D818E181096E894DC6F6C644A4C77F01C0C20066BC11F7879FD7BDB412103B1D9E47332C0CA7E8BFED5A8AEE4C42903B7D61F1722656BEFA7D09FD1EE55F2FEFFFFFF030000000000000000376A04534C500001010453454E4420D340519A93F4E83876C5EDD29F30D30A5CC3DADC00ABE9BF2B9DCE77E6B6E12F08000000000000000522020000000000001976A91428E2F85F852610C9A410D02F3200DD66BF7BFD9888AC22020000000000001976A91428E2F85F852610C9A410D02F3200DD66BF7BFD9888AC907A0900"));
            transactions.put(transaction.getHash(), transaction);
        }

        final MutableList<Sha256Hash> validHashes = new MutableList<Sha256Hash>();

        final Tuple<BlockchainIndexer, SlpTransactionValidator> slpValidationComponents = _createSlpValidationComponents(transactions, validHashes);

        // Assert
        _validateSlpTransactions(slpValidationComponents.second, slpValidityMap, transactions);
        slpValidationComponents.first.stop();
    }

    @Test
    public void should_validate_large_genesis_transaction_ba91704e0c0a2a56cce95f89c39f53699075b35daa2d94758d07b4b298b4c852() throws InterruptedException {
        // Setup
        final HashMap<Sha256Hash, Boolean> slpValidityMap = new HashMap<Sha256Hash, Boolean>();
        slpValidityMap.put(Sha256Hash.fromHexString("ba91704e0c0a2a56cce95f89c39f53699075b35daa2d94758d07b4b298b4c852"), true);

        final TransactionInflater transactionInflater = new TransactionInflater();

        final HashMap<Sha256Hash, Transaction> transactions = new HashMap<Sha256Hash, Transaction>();
        { // ba91704e0c0a2a56cce95f89c39f53699075b35daa2d94758d07b4b298b4c852
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        final MutableList<Sha256Hash> validHashes = new MutableList<Sha256Hash>();

        final Tuple<BlockchainIndexer, SlpTransactionValidator> slpValidationComponents = _createSlpValidationComponents(transactions, validHashes);

        // Assert
        _validateSlpTransactions(slpValidationComponents.second, slpValidityMap, transactions);
        slpValidationComponents.first.stop();
    }

    @Test
    public void should_validate_mint_transaction_21acf74af0577962be80f4ef7f13937f7319b0ce273a11950848f5c3f7d4c88c() throws InterruptedException {
        // Setup
        final HashMap<Sha256Hash, Boolean> slpValidityMap = new HashMap<Sha256Hash, Boolean>();
        slpValidityMap.put(Sha256Hash.fromHexString("4458aa2b84cc336c3948642def94af473395ace3689bf70f6183c40f14842911"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("09CB52AD4DC9402D1D8F9390C06ADBB885C51C17FDB32537283ED1729AE22509"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("9bfcd57a466693e0d093c793e2bb63cd6759b0d5bd6ef7a2405700f5e938bed9"), false);
        slpValidityMap.put(Sha256Hash.fromHexString("9623fdc2a0f847b5db7e73483113a512f3b84f56ebaf104aeb0021b3280b66bb"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("ce3ef515052c23410e3ff31f8651044de30a2c84517a0c505a2b555c433ff466"), true);
        slpValidityMap.put(Sha256Hash.fromHexString("21acf74af0577962be80f4ef7f13937f7319b0ce273a11950848f5c3f7d4c88c"), true);

        final TransactionInflater transactionInflater = new TransactionInflater();

        final HashMap<Sha256Hash, Transaction> transactions = new HashMap<Sha256Hash, Transaction>();
        { // 4458aa2b84cc336c3948642def94af473395ace3689bf70f6183c40f14842911
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("01000000010542E2957EDD9053AAE3B91ACE980104BB54977A8CB9147189133B0CFB57F596000000006B483045022100B0BB4E836B8425BEAD684E1C59595C5F5DB4895D67BC6DB35E60AE916F2053CE02204E0F4085EAD86DB64E97FFCC8AD8623BF4CB9D8D3A513F6971A608C90A4DB73C412102E03A2D925CF5E79D567186E01F50AB1E081FB568837AC7610D89B885E6BC85E0FEFFFFFF0400000000000000002D6A04534C500001010747454E45534953034B494D076B696D2E636F6D4C004C00010001020800000000000F424022020000000000001976A914EECC1286FE5103D0E990127843FAED53E7060BE888AC22020000000000001976A914EECC1286FE5103D0E990127843FAED53E7060BE888AC627D1700000000001976A91482A697F4A4BD47378F743984C6B98170C186792288ACE1A20800"));
            transactions.put(transaction.getHash(), transaction);
        }
        { // 09CB52AD4DC9402D1D8F9390C06ADBB885C51C17FDB32537283ED1729AE22509
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString("0200000002112984140FC483610FF79B68E3AC953347AF94EF2D6448396C33CC842BAA5844020000006A473044022070682C22CF3FB7214AD5E6B0FD8936E74370BCDC45FBFC256CDCD371BF53BD7102202EBD3FB9FC085C72C89BCFFF67C04ABE93BF3540BFD9D7DC125DA6AAE70BDF75412102E03A2D925CF5E79D567186E01F50AB1E081FB568837AC7610D89B885E6BC85E0FFFFFFFF698FF7DE18DBBD5AAEE92F2B98F48A8CAA78642B2E7F3F7CABBA610FB25F185F000000006B4830450221009B473A9D35F5E6A138B7267A6DEC8ABE8E70C064A4825BEE0553023913E7E27E02200CE6E350037AB4D5FFF8960BE361B77696BD002465821A353CE169E1E0F47EF3412102E03A2D925CF5E79D567186E01F50AB1E081FB568837AC7610D89B885E6BC85E0FFFFFFFF040000000000000000396A04534C50000101044D494E54204458AA2B84CC336C3948642DEF94AF473395ACE3689BF70F6183C40F14842911010208000000000000000122020000000000001976A9143002E592B5340FBD4D9650A19E03CAC85E302DD988AC22020000000000001976A9143002E592B5340FBD4D9650A19E03CAC85E302DD988AC13230000000000001976A914EECC1286FE5103D0E990127843FAED53E7060BE888AC00000000"));
            transactions.put(transaction.getHash(), transaction);
        }
        { // 9bfcd57a466693e0d093c793e2bb63cd6759b0d5bd6ef7a2405700f5e938bed9
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }
        { // 9623fdc2a0f847b5db7e73483113a512f3b84f56ebaf104aeb0021b3280b66bb
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }
        { // ce3ef515052c23410e3ff31f8651044de30a2c84517a0c505a2b555c433ff466
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }
        { // 21acf74af0577962be80f4ef7f13937f7319b0ce273a11950848f5c3f7d4c88c
            final Transaction transaction = transactionInflater.fromBytes(ByteArray.fromHexString
            transactions.put(transaction.getHash(), transaction);
        }

        final MutableList<Sha256Hash> validHashes = new MutableList<Sha256Hash>();

        final Tuple<BlockchainIndexer, SlpTransactionValidator> slpValidationComponents = _createSlpValidationComponents(transactions, validHashes);

        // Assert
        _validateSlpTransactions(slpValidationComponents.second, slpValidityMap, transactions);
        slpValidationComponents.first.stop();
    }
}
